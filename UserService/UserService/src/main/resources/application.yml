#
#
#server:
#  port: 8081
#
#
#
#spring:
#  application:
#    name: USERSERVICE
#  datasource:
#    url: jdbc:mysql://localhost:3306/microservice
#    username: root
#    password: Rajesh
#    driver-class-name: com.mysql.cj.jdbc.Driver
#
#
#
#
#
#  jpa:
#    hibernate:
#      ddl-auto: update
#    show-sql: true
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.MySQL8Dialect
#
#  config:
#    import: configserver:http://localhost:8085
#
#
##eureka:
##  instance:
##    prefer-ip-address: true
##  client:
##   fetch-registry: true
##   register-with-eureka: true
##   service-url:
##     defaultZone: http://localhost:8761/eureka/
#
#
#management:
#  health:
#    circuitbreakers:
#      enabled: true
#  endpoints:
#        web:
#          exposure:
#            include: health
#
#  endpoint:
#    health:
#      show-details: always
#
#
#resilience4j:
#  circuitbreaker:
#    instances:
#      ratingHotelBreaker:
#        registerHealthIndicator: true
#        eventConsumerBufferSize: 10
#        failureRateThreshold: 50
#        minimumNumberOfCalls: 5
#        automaticTransitionFromOpenToHalfOpenEnabled: true
#        waitDurationInOpenState: 6s
#        permittedNumberOfCallsInHalfOpenState: 3
#        slidingWindowSize: 10
#        slidingWindowType: COUNT_BASED
#  retry:
#    instances:
#      ratingHotelService:
#        max-attempts: 3
#        wait-duration: 5s
#
#  ratelimiter:
#    instances:
#      userRateLimiter:
#        limit-refresh-period: 4s
#        limit-for-period: 2
#        timeout-duration: 0s

server:
  port: 8081

spring:
  application:
    name: USERSERVICE

  datasource:
    url: jdbc:mysql://localhost:3306/microservice
    username: root
    password: Rajesh
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  config:
    import: configserver:http://localhost:8085

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-65856828.okta.com/oauth2/default

# If you want Eureka, uncomment and use:
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    fetch-registry: true
#    register-with-eureka: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka/

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
  retry:
    instances:
      ratingHotelService:
        max-attempts: 3
        wait-duration: 5s

  ratelimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 0s
